name: Streamlit App CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  PYTHON_VERSION: '3.11'

jobs:
  # 빌드 및 종속성 확인
  build:
    name: Build and Check
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ env.PYTHON_VERSION }}
    
    # pip 캐시로 빌드 속도 향상
    - name: Cache pip packages
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    # 앱이 정상적으로 import 되는지만 확인
    - name: Verify app imports
      env:
        OC_CODE: ${{ secrets.OC_CODE }}
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      run: |
        python -c "
        import streamlit
        import requests
        import pandas
        import PyPDF2
        import pdfplumber
        print('✅ All imports successful')
        "
    
    # Streamlit 앱 문법 검사
    - name: Check Streamlit app syntax
      run: |
        python -m py_compile *.py || true
        echo "✅ Python syntax check completed"

  # Streamlit Cloud 배포
  deploy:
    name: Deploy to Streamlit Cloud
    needs: build
    runs-on: ubuntu-latest
    if: |
      github.ref == 'refs/heads/main' && 
      github.event_name == 'push'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Deploy notification
      run: |
        echo "🚀 Deployment triggered for Streamlit Cloud"
        echo "Repository: ${{ github.repository }}"
        echo "Branch: ${{ github.ref_name }}"
        echo "Commit: ${{ github.sha }}"
        echo ""
        echo "✅ Streamlit Cloud will automatically deploy via GitHub integration"
        echo "📊 Check deployment status at: https://share.streamlit.io/"
